<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_Must_Be_GreaterThan" xml:space="preserve">
    <value>Value must be greater than {0}.</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Test Muti Language&amp;Areas</value>
  </data>
  <data name="Argument_Cannot_Be_Null_Or_Empty" xml:space="preserve">
    <value>Value cannot be null or an empty string.</value>
  </data>
  <data name="Argument_Must_Be_Between" xml:space="preserve">
    <value>Value must be between {0} and {1}.</value>
  </data>
  <data name="Argument_Must_Be_Enum_Member" xml:space="preserve">
    <value>Value must be a value from the "{0}" enumeration.</value>
  </data>
  <data name="Argument_Must_Be_GreaterThanOrEqualTo" xml:space="preserve">
    <value>Value must be greater than or equal to {0}.</value>
  </data>
  <data name="Argument_Must_Be_LessThan" xml:space="preserve">
    <value>Value must be less than {0}.</value>
  </data>
  <data name="Argument_Must_Be_LessThanOrEqualTo" xml:space="preserve">
    <value>Value must be less than or equal to {0}.</value>
  </data>
  <data name="Argument_Must_Be_Null_Or_Non_Empty" xml:space="preserve">
    <value>Value cannot be an empty string. It must either be null or a non-empty string.</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid e-mail address.</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeCannotBeNull" xml:space="preserve">
    <value>The type provided for EnumDataTypeAttribute cannot be null.</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>The type '{0}' needs to represent an enumeration type.</value>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} is not valid.</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or array type with a maximum length of '{1}'.</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string or array type with a minimum length of '{1}'.</value>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>The {0} field is not a valid phone number.</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must match the regular expression '{1}'.</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>The {0} field is Required.My</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string with a maximum length of {1}.</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.</value>
  </data>
  <data name="ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource" xml:space="preserve">
    <value>Either ErrorMessageString or ErrorMessageResourceName must be set, but not both.</value>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} is invalid.</value>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>The pattern must be set to a valid regular expression.</value>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>'{0}' and '{1}' do not match.</value>
  </data>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>Could not find a property named {0}.</value>
  </data>
  <data name="DataTypeAttribute_ValidationError" xml:space="preserve">
    <value>The value '{1}' is not valid for {0}.</value>
  </data>
  <data name="RemoteAttribute_NoUrlFound" xml:space="preserve">
    <value>Failed to find url for remote authentication.</value>
  </data>
  <data name="RemoteAttribute_RemoteValidationFailed" xml:space="preserve">
    <value>'{0}' is invalid.</value>
  </data>
</root>