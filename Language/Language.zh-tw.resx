<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Argument_Must_Be_GreaterThan" xml:space="preserve">
    <value>值必須大於 {0}。</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>創建</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>列表</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>標題</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>測試多語言及區域</value>
  </data>
  <data name="Argument_Cannot_Be_Null_Or_Empty" xml:space="preserve">
    <value>值不可為 null 或空字串。</value>
  </data>
  <data name="Argument_Must_Be_Between" xml:space="preserve">
    <value>值必須介於 {0} 到 {1} 之間。</value>
  </data>
  <data name="Argument_Must_Be_Enum_Member" xml:space="preserve">
    <value>值必須是來自 "{0}" 列舉的值。</value>
  </data>
  <data name="Argument_Must_Be_GreaterThanOrEqualTo" xml:space="preserve">
    <value>值必須大於或等於 {0}。</value>
  </data>
  <data name="Argument_Must_Be_LessThan" xml:space="preserve">
    <value>值必須小於 {0}。</value>
  </data>
  <data name="Argument_Must_Be_LessThanOrEqualTo" xml:space="preserve">
    <value>值必須小於或等於 {0}。</value>
  </data>
  <data name="Argument_Must_Be_Null_Or_Non_Empty" xml:space="preserve">
    <value>值不可為空字串。值必須是 null 或非空字串。</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>未授權</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>字段 {0} 不是正確的郵箱格式</value>
  </data>
  <data name="CustomValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} 不被允許</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段必須是字符串或最大長度為'{1}'的數組。</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段必須是字符串或最小長度為'{1}'的數組。</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段值必須介於 {1} 和 {2} 之間</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段值必須匹配正則表達式 '{1}'.</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>{0} 欄位是必填欄位。My</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段必須是字符串或最大長度為'{1}'的數組。</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>{0} 字段必須是字符串且 長度必須介於'{1}' 到 '{2}'之間</value>
  </data>
  <data name="ValidationAttribute_ValidationError" xml:space="preserve">
    <value>{0} 字段 不被允許</value>
  </data>
  <data name="RegularExpressionAttribute_Empty_Pattern" xml:space="preserve">
    <value>必須將模式設置為有效的正則表達式</value>
  </data>
  <data name="EnumDataTypeAttribute_TypeNeedsToBeAnEnum" xml:space="preserve">
    <value>類型“{0}”需要表示枚舉類型。</value>
  </data>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>“{0}”和“{1}”不匹配。</value>
  </data>
  <data name="CompareAttribute_UnknownProperty" xml:space="preserve">
    <value>找不到名為{0}的屬性。</value>
  </data>
  <data name="DataTypeAttribute_ValidationError" xml:space="preserve">
    <value>值“{1}”對字段{0}無效。</value>
  </data>
  <data name="RemoteAttribute_NoUrlFound" xml:space="preserve">
    <value>未能找到用於遠程驗證的url。</value>
  </data>
  <data name="RemoteAttribute_RemoteValidationFailed" xml:space="preserve">
    <value>“{0}”無效。</value>
  </data>
</root>